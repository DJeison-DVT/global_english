// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  name     String
  surname  String
  password String
  role     Role     @default(USER)
  Course   Course[]
}

model Company {
  id     Int      @id @default(autoincrement())
  name   String
  Course Course[]
}

model Course {
  id           Int        @id @default(autoincrement())
  name         String
  companyId    Int
  professorId  Int
  startingDate DateTime
  endingDate   DateTime
  level        Level?
  company      Company    @relation(fields: [companyId], references: [id])
  professor    User       @relation(fields: [professorId], references: [id])
  students     Student[]
  weekdays     Weekday[]
  Attended     Attended[]
}

model Student {
  id       Int        @id @default(autoincrement())
  fullname String
  Course   Course     @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId Int
  Attended Attended[]
}

model Attended {
  id        Int      @id @default(autoincrement())
  date      DateTime
  studentId Int
  courseId  Int
  student   Student  @relation(fields: [studentId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
